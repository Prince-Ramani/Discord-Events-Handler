// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum plan {
  FREE
  PAID
}

model User {
  id            String          @id @default(cuid())
  externalId    String          @unique
  quotaLimit    Int
  plan          plan            @default(FREE)
  email         String          @unique
  apiKey        String          @unique @default(cuid())
  discordId     String?         @unique
  createdAt     DateTime        @default(now())
  updaetdAt     DateTime        @updatedAt
  EventCategory EventCategory[]
  Event         Event[]
  Quota         Quota[]

  @@index([email, apiKey])
}

model EventCategory {
  id    String  @id @default(cuid())
  name  String
  color Int
  emoji String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  events Event[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, name])
}

enum deliveryStatus {
  PENDING
  DELIVERED
  FAILED
}

model Event {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  name            String
  fields          Json
  formatedMessage String

  deliveryStatus deliveryStatus @default(PENDING)

  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  EventCategory   EventCategory? @relation(fields: [eventCategoryId], references: [id])
  eventCategoryId String?

  @@index([createdAt])
}

model Quota {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String

  year  Int
  month Int
  count Int @default(0)

  updatedAt DateTime @updatedAt
}
